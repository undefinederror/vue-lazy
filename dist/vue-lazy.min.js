var VueLazy=function(n,e){"use strict";var t={throttle:e.throttle,debounce:e.debounce,get:e.get},o={bind:function(n,e,o){var i=["debounce","throttle"].includes(e.arg)?e.arg:"debounce",a=Number(e.value)||500,c=u(o),r=c.removeListener,d=c.addListener,s=(0,c.getInputEvents)(o);s.length||console.log("[v-lazy-input] no input events found during bind"),s.map(function(n){r("input",n._wrapper||n)}),d("input",t[i](function(n){t.get(o.context,e.expression)!==n&&s.map(function(e){e(n)})},a),!1)},unbind:function(n,e,t){var o=u(t),i=o.removeListener;(0,o.getInputEvents)(t).map(function(n){i("input",n)})}};function u(n){var e=!!n.componentInstance;return{removeListener:e?n.componentInstance.$off.bind(n.componentInstance):function(e,t){n.elm.removeEventListener(e,t),delete n.data.on[e]},addListener:e?n.componentInstance.$on.bind(n.componentInstance):function(e,t,o){n.elm.addEventListener(e,t,o),n.data.on[e]=t},getInputEvents:e?function(){return[].concat(n.componentInstance._events.input||[])}:function(){return[n.data.on.input]}}}var i=Object.freeze({lazy:o});var a={install:function n(e){n.installed||(n.installed=!0,Object.keys(i).forEach(function(n){console.log(i),e.directive(n,i[n])}))}},c=null;return"undefined"!=typeof window?c=window.Vue:"undefined"!=typeof global&&(c=global.Vue),c&&c.use(a),n.default=a,n.lazy=o,n}({},_);